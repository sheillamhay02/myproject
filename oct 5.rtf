{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;\f1\fmodern\fcharset0 Courier-Oblique;}
{\colortbl;\red255\green255\blue255;\red191\green100\blue38;\red32\green32\blue32;\red88\green118\blue71;
\red254\green187\blue91;\red153\green168\blue186;\red173\green169\blue32;\red133\green96\blue154;\red86\green132\blue173;
}
{\*\expandedcolortbl;;\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c34510\c46275\c27843;
\csgenericrgb\c99608\c73333\c35686;\csgenericrgb\c60000\c65882\c72941;\csgenericrgb\c67843\c66275\c12549;\csgenericrgb\c52157\c37647\c60392;\csgenericrgb\c33725\c51765\c67843;
}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \cb3 import \cf4 'package:flutter/material.dart'\cf2 ;\
import \cf4 'package:hive_flutter/hive_flutter.dart'\cf2 ;\
import \cf4 'package:untitled8/homepage.dart'\cf2 ;\
\
void \cf5 main\cf6 () \cf2 async\cf6 \{\
  \cf2 await \cf6 Hive.initFlutter()\cf2 ;\
\
  \cf6 runApp(\cf2 const \cf5 MyApp\cf6 ())\cf2 ;\
\
\cf6 \}\
\
\cf2 class \cf6 MyApp \cf2 extends \cf6 StatelessWidget \{\
  \cf2 const \cf6 MyApp(\{Key? key\}) : \cf2 super\cf6 (key: key)\cf2 ;\
\
  \cf7 @override\
  \cf6 Widget \cf5 build\cf6 (BuildContext context) \{\
    \cf2 return \cf5 MaterialApp\cf6 (\
      debugShowCheckedModeBanner: \cf2 false,\
      \cf6 home: \cf5 HomePage\cf6 ()\cf2 ,\
      \cf6 theme: \cf5 ThemeData\cf6 (primarySwatch: Colors.
\f1\i \cf8 blue
\f0\i0 \cf2 ,\
    \cf6 )\cf2 ,\
    \cf6 )\cf2 ;\
  \cf6 \}\
\}\
\
\
\
\
\
\
\cf2 import \cf4 'package:flutter/material.dart'\cf2 ;\
import \cf4 'package:untitled8/database.dart'\cf2 ;\
import \cf4 'package:untitled8/util/dialog_box.dart'\cf2 ;\
import \cf4 'package:untitled8/util/plan_tile.dart'\cf2 ;\
\
class \cf6 HomePage \cf2 extends \cf6 StatefulWidget \{\
   HomePage(\{Key? key\}) : \cf2 super\cf6 (key: key)\cf2 ;\
\
\
\
  \cf7 @override\
  \cf6 State<HomePage> \cf5 createState\cf6 () => \cf5 _HomePageState\cf6 ()\cf2 ;\
\cf6 \}\
\
\cf2 class \cf6 _HomePageState \cf2 extends \cf6 State<HomePage> \{\
\
  \cf2 final \cf8 _controller \cf6 = \cf5 TextEditingController\cf6 ()\cf2 ;\
\
  \cf6 PlanDataBase \cf8 db \cf6 = \cf5 PlanDataBase\cf6 ()\cf2 ;\
\
  void \cf5 checkBoxChanged\cf6 (bool? value\cf2 , \cf6 int index)\{\
    setState(() \{\
      \cf8 db\cf6 .\cf8 planList\cf6 [index] [\cf9 1\cf6 ] = !\cf8 db\cf6 .\cf8 planList \cf6 [index ] [\cf9 1\cf6 ]\cf2 ;\
\
\
\
    \cf6 \})\cf2 ;\
  \cf6 \}\
\
  \cf2 void \cf5 saveNewPlan\cf6 ()\{\
    setState(() \{\
      \cf8 db\cf6 .\cf8 planList\cf6 .add([\cf8 _controller\cf6 .\cf8 text\cf2 ,false\cf6 ])\cf2 ;\
      \cf8 _controller\cf6 .clear() \cf2 ;\
    \cf6 \})\cf2 ;\
    \cf6 Navigator.
\f1\i \cf5 of
\f0\i0 \cf6 (\cf8 context\cf6 ).pop()\cf2 ;\
  \cf6 \}\
\
  \cf2 void \cf5 createNewPlan\cf6 ()\{\
    showDialog(\
        context: \cf8 context\cf2 ,\
        \cf6 builder: (context)\{\
          \cf2 return \cf5 DialogBox\cf6 (\
            controller:\cf8 _controller\cf2 ,\
            \cf6 onSave: \cf5 saveNewPlan\cf2 ,\
            \cf6 onCancel: () => Navigator.
\f1\i \cf5 of
\f0\i0 \cf6 (context).pop()\cf2 ,\
          \cf6 )\cf2 ;\
         \cf6 \}\cf2 ,\
        \cf6 )\cf2 ;\
  \cf6 \}\
\
  \cf2 void \cf5 deletePlan\cf6 (int index)\{\
    setState(() \{\
      \cf8 db\cf6 .\cf8 planList\cf6 .removeAt(index)\cf2 ;\
    \cf6 \})\cf2 ;\
  \cf6 \}\
  \cf7 @override\
  \cf6 Widget \cf5 build\cf6 (BuildContext context) \{\
    \cf2 return \cf5 Scaffold\cf6 (\
      backgroundColor: \cf5 Color\cf6 (\cf9 0xff97BBF9\cf6 )\cf2 ,\
      \cf6 appBar: \cf5 AppBar\cf6 (\
        title: \cf5 Text\cf6 (\cf4 'PLANS'\cf6 )\cf2 ,\
          \cf6 elevation:\cf9 0\cf2 ,\
        \cf6 )\cf2 ,\
      \cf6 floatingActionButton: \cf5 FloatingActionButton\cf6 (\
        onPressed: \cf5 createNewPlan\cf2 ,\
        \cf6 child:\cf5 Icon\cf6 (Icons.
\f1\i \cf8 add
\f0\i0 \cf6 ) \cf2 ,\
      \cf6 )\cf2 ,\
      \cf6 body: \cf5 ListView\cf6 .\cf5 builder\cf6 (\
         itemCount:\cf8 db\cf6 .\cf8 planList\cf6 .\cf8 length\cf2 ,\
        \cf6 itemBuilder: (context\cf2 ,\cf6 index) \{\
           \cf2 return \cf5 PlanTile\cf6 (\
           taskName: \cf8 db\cf6 .\cf8 planList\cf6 [index] [\cf9 0\cf6 ]\cf2 ,\
           \cf6 taskCompleted: \cf8 db\cf6 .\cf8 planList\cf6 [index] [\cf9 1\cf6 ]\cf2 ,\
           \cf6 onChanged: (value) => checkBoxChanged(value\cf2 ,\cf6 index)\cf2 ,\
             \cf6 deleteFunction: (context)=>\cf5 deletePlan\cf2 ,\
       \cf6 )\cf2 ;\
    \cf6 \}\cf2 ,\
      \cf6 )\cf2 ,\
    \cf6 )\cf2 ;\
  \cf6 \}\
\}\
\
\
\
\
\
\cf2 import \cf4 'package:hive/hive.dart'\cf2 ;\
\
class \cf6 PlanDataBase \{\
  List \cf8 planList \cf6 = []\cf2 ;\
  final \cf8 _myBox \cf6 = Hive.box(\cf4 'mybox'\cf6 )\cf2 ;\
\
  void \cf5 createInitialData\cf6 () \{\
    \cf8 planList\cf6 = [\
      [\cf4 'Flutter'\cf2 ,false\cf6 ]\cf2 ,\
      \cf6 [\cf4 'Log In UI'\cf2 ,false\cf6 ]\cf2 ,\
    \cf6 ]\cf2 ;\
  \cf6 \}\
\
  \cf2 void \cf5 loadData\cf6 ()\{\
    \cf8 planList \cf6 = \cf8 _myBox\cf6 .get(\cf4 'PLANLIST'\cf6 )\cf2 ;\
\
  \cf6 \}\
  \cf2 void \cf5 updateDataBase\cf6 ()\{\
    \cf8 _myBox\cf6 .put(\cf4 'PlanDataBase'\cf2 ,\cf8 planList\cf6 )\cf2 ;\
\
  \cf6 \}\
\}\
\cf2 import \cf4 'package:flutter/material.dart'\cf2 ;\
import \cf4 'package:untitled8/util/my_button.dart'\cf2 ;\
\
class \cf6 DialogBox \cf2 extends \cf6 StatelessWidget \{\
  \cf2 final \cf8 controller\cf2 ;\
  \cf6 VoidCallback \cf8 onSave\cf2 ;\
  \cf6 VoidCallback \cf8 onCancel\cf2 ;\
\
\
   \cf6 DialogBox(\{\cf2 super\cf6 .key\cf2 ,\
  required this\cf6 .\cf8 controller\cf2 ,\
  required this\cf6 .\cf8 onSave\cf2 ,\
  required this\cf6 .\cf8 onCancel\cf2 ,\
  \cf6 \})\cf2 ;\
\
  \cf7 @override\
  \cf6 Widget \cf5 build\cf6 (BuildContext context) \{\
    \cf2 return \cf5 AlertDialog\cf6 (\
      backgroundColor: \cf5 Color\cf6 (\cf9 0xffa1c1f9\cf6 )\cf2 ,\
      \cf6 content: \cf5 Container\cf6 (\
        height: \cf9 120\cf2 ,\
        \cf6 child: \cf5 Column\cf6 (\
          mainAxisAlignment: MainAxisAlignment.\cf8 spaceBetween\cf2 ,\
          \cf6 children: [\
          \cf5 TextField\cf6 (\
            controller: \cf8 controller\cf2 ,\
            \cf6 decoration: \cf5 InputDecoration\cf6 (\
              border: \cf5 OutlineInputBorder\cf6 ()\cf2 ,\
               \cf6 hintText:\cf4 'Add a new plan'\cf2 ,\
      \cf6 )\cf2 ,\
            \cf6 )\cf2 ,\
            \cf5 Row\cf6 (\
              mainAxisAlignment: MainAxisAlignment.\cf8 end\cf2 ,\
              \cf6 children: [\
                \cf5 MyButton\cf6 (text:\cf4 'Save'\cf2 , \cf6 onPressed: \cf8 onSave\cf6 )\cf2 ,\
                \cf5 SizedBox\cf6 (width: \cf9 4\cf6 )\cf2 ,\
                \cf5 MyButton\cf6 (text: \cf4 'Cancel'\cf2 , \cf6 onPressed: \cf8 onCancel \cf6 )\cf2 ,\
               \cf6 ]\cf2 ,\
           \cf6 )\cf2 ,\
        \cf6 ]\cf2 ,\
        \cf6 )\cf2 ,\
      \cf6 )\cf2 ,\
    \cf6 )\cf2 ;\
  \cf6 \}\
\}\
\
\cf2 import \cf4 'package:flutter/material.dart'\cf2 ;\
\
class \cf6 MyButton \cf2 extends \cf6 StatelessWidget \{\
  \cf2 final \cf6 String \cf8 text\cf2 ;\
  \cf6 VoidCallback \cf8 onPressed\cf2 ;\
  \cf6 MyButton(\{\
  \cf2 super\cf6 .key\cf2 ,\
   required this\cf6 .\cf8 text\cf2 , \
   required this\cf6 .\cf8 onPressed\cf2 ,\
\cf6 \}) \cf2 ;\
\
  \cf7 @override\
  \cf6 Widget \cf5 build\cf6 (BuildContext context) \{\
    \cf2 return \cf5 MaterialButton\cf6 (\
        onPressed: \cf8 onPressed\cf2 ,\
        \cf6 color: Theme.
\f1\i \cf5 of
\f0\i0 \cf6 (context).\cf8 primaryColor \cf2 ,\
        \cf6 child: \cf5 Text\cf6 (\cf8 text\cf6 )\cf2 ,\
    \cf6 )\cf2 ;\
  \cf6 \}\
\}\
\
\
\
\
\cf2 import \cf4 'package:flutter/material.dart'\cf2 ;\
import \cf4 'package:flutter_slidable/flutter_slidable.dart'\cf2 ;\
\
\
class \cf6 PlanTile \cf2 extends \cf6 StatelessWidget \{\
  \cf2 final \cf6 String \cf8 taskName\cf2 ;\
  final \cf6 bool \cf8 taskCompleted\cf2 ;\
  \cf6 Function(bool?)? \cf8 onChanged\cf2 ;\
  \cf6 Function(BuildContext)? \cf8 deleteFunction\cf2 ;\
\
\
 \cf6 PlanTile(\{\
    \cf2 super\cf6 .key\cf2 ,\
    required this\cf6 .\cf8 taskName\cf2 ,\
    required this\cf6 .\cf8 taskCompleted\cf2 ,\
    required this\cf6 .\cf8 onChanged\cf2 ,\
   required this\cf6 .\cf8 deleteFunction\cf2 ,\
  \cf6 \})\cf2 ;\
\
  \cf7 @override\
  \cf6 Widget \cf5 build\cf6 (BuildContext context) \{\
    \cf2 return \cf5 Padding\cf6 (\
      padding: \cf2 const \cf5 EdgeInsets\cf6 .\cf5 only\cf6 (left: \cf9 25.0\cf2 ,\cf6 right: \cf9 25\cf2 ,\cf6 top:\cf9 25 \cf6 )\cf2 ,\
      \cf6 child: \cf5 Slidable\cf6 (\
        endActionPane: \cf5 ActionPane\cf6 (\
              motion: \cf5 StretchMotion\cf6 ()\cf2 ,\
              \cf6 children: [\
                \cf5 SlidableAction\cf6 (\
            onPressed: \cf8 deleteFunction\cf2 ,\
            \cf6 icon: Icons.
\f1\i \cf8 delete
\f0\i0 \cf2 ,\
            \cf6 backgroundColor: \cf5 Color\cf6 (\cf9 0xfff58d7d\cf6 )\cf2 ,\
                  \cf6 borderRadius: \cf5 BorderRadius\cf6 .\cf5 circular\cf6 (\cf9 12 \cf6 )\cf2 ,\
                \cf6 )\cf2 ,\
            \cf6 ]\cf2 ,\
              \cf6 )\cf2 ,\
        \cf6 child: \cf5 Container\cf6 (\
          padding: \cf5 EdgeInsets\cf6 .\cf5 all\cf6 (\cf9 24.0\cf6 )\cf2 ,\
          \cf6 child:\
          \cf5 Row\cf6 (\
            children: [\
\
              \cf5 Checkbox\cf6 (\
                  value:\cf8 taskCompleted \cf2 ,\
                  \cf6 onChanged: \cf8 onChanged\cf2 ,\
              \cf6 activeColor:Colors.
\f1\i \cf8 black 
\f0\i0 \cf2 ,\
              \cf6 )\cf2 ,\
              \cf5 Text\cf6 (\
                  \cf8 taskName\cf2 ,\
              \cf6 style: \cf5 TextStyle\cf6 (\
                decoration: \cf8 taskCompleted\
                    \cf6 ?TextDecoration.
\f1\i \cf8 lineThrough\
                    
\f0\i0 \cf6 :TextDecoration.
\f1\i \cf8 none\
              
\f0\i0 \cf6 )\cf2 ,\cf6 )\cf2 ,\
            \cf6 ]\cf2 ,\
          \cf6 )\cf2 ,\
          \cf6 decoration: \cf5 BoxDecoration\cf6 (color: Colors.
\f1\i \cf8 blue
\f0\i0 \cf2 ,\
            \cf6 borderRadius: \cf5 BorderRadius\cf6 .\cf5 circular\cf6 (\cf9 12\cf6 )\cf2 ,\
          \cf6 )\cf2 ,\
        \cf6 )\cf2 ,\
      \cf6 )\cf2 ,\
    \cf6 )\cf2 ;\
  \cf6 \}\
\}\
\
\
\
}